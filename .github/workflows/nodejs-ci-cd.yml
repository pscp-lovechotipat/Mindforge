name: Node.js CI/CD

on:
  push:
    branches: [ main ]  # Trigger the workflow on push events to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

 new content.
For the SERVER_SSH_KEY secret in your GitHub repository settings:
Copy your entire private key, including the "-----BEG
Claude can make mistakes. Please double-check responses.



No file chosen



3.5 Sonnet

GitHub Actions workflow for Node.js auto-deploy

name: Bun CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Build project
      run: bun run build

    - name: Run tests
      run: bun test

    - name: Setup and debug SSH key
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        echo "Content of id_rsa (first 5 lines, sensitive info redacted):"
        sed 's/./*/g' ~/.ssh/id_rsa | head -n 5
        echo "File type of id_rsa:"
        file ~/.ssh/id_rsa
        echo "Private key details (if OpenSSH format):"
        ssh-keygen -l -f ~/.ssh/id_rsa || echo "Failed to read private key as OpenSSH format"
        echo "Attempting to convert key (if needed):"
        ssh-keygen -p -N "" -m PEM -f ~/.ssh/id_rsa || echo "Key conversion not needed or failed"

    - name: Debug SSH connection
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
      run: |
        echo "SSH key file permissions:"
        ls -l ~/.ssh/id_rsa
        echo "Attempting to connect to $SERVER_USER@$SERVER_IP"
        ssh -v -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP exit

    - name: Deploy to local server
      if: success()
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
      run: |
        ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << 'EOF'
        cd /home/ubuntu/Mindforge
        git pull origin main
        cd /home/ubuntu/Mindforge/website
        bun run build
        pm2 restart mindforge-web  # Or your preferred method to restart the Node.js app
        # Add any other necessary commands here
        # For example, you might want to call your custom API:
        # curl -X POST http://your-custom-api-endpoint/deploy